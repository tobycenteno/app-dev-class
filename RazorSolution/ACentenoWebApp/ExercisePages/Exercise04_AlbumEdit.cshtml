@{
    Layout = "~/_Layout.cshtml";
    Page.Title = "Exercise04";

    var alid = Request.QueryString["alid"];
    if (alid.IsEmpty())
    {
        Response.Redirect("Exercise04_AlbumSearch.cshtml");
    }

    var albumid = Request.Form["AlbumID"];
    var albumtitle = Request.Form["AlbumTitle"];
    var artistid = Request.Form["AlbumArtist"];
    var releaseyear = Request.Form["ReleaseYear"];
    var releaselabel = Request.Form["ReleaseLabel"];

    //capture which button was pressed
    var thebutton = Request.Form["theButton"];


    albumid = alid;

    var db = Database.Open("CHINOOKDB");

    var artistquery = "SELECT ArtistId, Name  "
                       + "FROM Artists "
                       + "ORDER BY Name";

    var artistlist = db.Query(artistquery);

    var queryStatement = "SELECT AlbumId, Title, ArtistId, ReleaseYear, ReleaseLabel  "
                        + "FROM Albums "
                        + "WHERE AlbumId = @0";
    var queryAlbums = db.QuerySingle(queryStatement, alid);

    Validation.Add("AlbumTitle", Validator.Required("Title is required."));
    Validation.Add("AlbumTitle", Validator.StringLength(160, 1, "Title should be equal or less than 160 characters."));

    Validation.Add("AlbumArtist", Validator.Required("Artist is required."));

    Validation.Add("ReleaseYear", Validator.Required("Release year is required."));
    Validation.Add("ReleaseYear", Validator.Range(1950, DateTime.Today.Year, "Year should be between 1950 up to the present year inclusive."));

    Validation.Add("ReleaseLabel", Validator.StringLength(50, 0, "Release label should be equal or less than 50 characters."));
}


@section pagetitle{
    <span style="font-size:xx-large"><strong>Exercise04: Update/Delete Album</strong></span>
}

<div>
    <div class="row">
        <div class="col-xs-6">
            @if (IsPost)
            {
                if (thebutton.Equals("cancel"))
                {
                    //a)could redirect to search page
                    //b)reset data to the current record for productid
                    //c)empty the data fields.
                    //for b and c you should also supply a message to the user
                    albumid = "";
                    albumtitle = "";
                    artistid = "0";
                    releaseyear = "0";
                    releaselabel = "";
                    <div class="alert alert-info" role="alert">
                        User has cancelled the action. Return to <a href="~/ExercisePages/Exercise04_AlbumSearch.cshtml">
                            search
                        </a> for another album.
                    </div>
                }
                else if (thebutton.Equals("reset"))
                {
                    if (queryAlbums == null)
                    {
                        <div class="alert alert-danger" role="alert">
                            No album details to reset.
                        </div>
                        albumid = "";
                    }else
                    {
                        albumid = queryAlbums.AlbumId.ToString();
                        albumtitle = queryAlbums.Title.ToString();
                        artistid = queryAlbums.ArtistId == null ? "" : queryAlbums.ArtistId.ToString();
                        releaseyear = queryAlbums.ReleaseYear.ToString() == "0" ? "" : queryAlbums.ReleaseYear.ToString();
                        releaselabel = queryAlbums.ReleaseLabel == null ? "" : queryAlbums.ReleaseLabel.ToString();
                    }
                }

                else if (thebutton.Equals("delete"))
                {
                    //check if there a productid to delete
                    //if not message to use to get new product
                    //if present
                    //  create delete command
                    //  execute
                    //  message
                    //  wrap in try/catch
                    if (string.IsNullOrEmpty(albumid))
                    {
                            <div class="alert alert-info" role="alert">
                                No album selected. Return to <a href="~/ExercisePages/Exercise04_AlbumSearch.cshtml">
                                    search
                                </a> for another album.
                            </div>
                        }
                        else
                        {
                            try
                            {
                                var deletecommmand = "DELETE Albums WHERE AlbumId = @0";
                                int results = db.Execute(deletecommmand, albumid);
                                if (results > 0)
                                {
                                    <div class="alert alert-success" role="alert">
                                        Album successfully deleted.
                                    </div>
                                    //optionally clear the fields.
                                    albumid = "";
                                    albumtitle = "";
                                    artistid = "";
                                    releaseyear = "";
                                    releaselabel = "";
                                }
                                else
                                {
                                    <div class="alert alert-danger" role="alert">
                                        Delete failed. No album @albumtitle with an id of @albumid on file.
                                    </div>
                                }

                            }
                            catch (Exception ex)
                            {
                                <div class="alert alert-danger" role="alert">
                                    Delete failed. <br />Error: @ex.Message
                                </div>
                            }
                        }
                    }
                    else
                    {
                        //check is there a productid to update
                        //if not message to use to get new product
                        //if present
                        //  cause validations
                        //  if valid
                        //      create delete command
                        //      execute
                        //      message
                        //      wrap in try/catch
                        if (string.IsNullOrEmpty(albumid))
                        {
                            <div class="alert alert-info" role="alert">
                                No album selected. Return to <a href="~/ExercisePages/Exercise04_AlbumSearch.cshtml">
                                    search
                                </a> for another album.
                            </div>
                        }
                        else
                        {
                            if (Validation.IsValid())
                            {

                                try
                                {
                                    var updatecommmand = "UPDATE Albums  "
                                                        + "SET Title = @0, "
                                                        + "ArtistId = @1, "
                                                        + "ReleaseYear = @2, "
                                                        + "ReleaseLabel = @3 "
                                                        + "WHERE AlbumId = @4";
                                    //the placeholders expect a value not to be confused
                                    // with a character string
                                    //the null (as a value) is NOT equal to "null" which is a string
                                    int results = db.Execute(updatecommmand, albumtitle,
                                        artistid == "" ? null : artistid,
                                        string.IsNullOrEmpty(releaseyear) ? null : releaseyear,
                                        string.IsNullOrEmpty(releaselabel) ? null : releaselabel,
                                        albumid);
                                    if (results > 0)
                                    {
                                        <div class="alert alert-success" role="alert">
                                            Album successfully updated!
                                        </div>
                                    }
                                    else
                                    {
                                        <p>
                                            <span style="color:blue">
                                                Update failed. No album called @albumtitle with an id of @albumid on file.
                                            </span>
                                        </p>
                                    }
                                }
                                catch (Exception ex)
                                {
                                    < p >
                                    < span style = "color:blue" >
                                    Deleted failed.Error @ex.Message
                                    </ span >

                                    </ p >
                                }
                            }
                        }
                    }
                }
                else //for IsPost
                {
                    //if this page is being shown for the "first time"
                    //the page accesses the database for the current record
                    //to display to the user
                    queryAlbums = db.QuerySingle(queryStatement, alid);

                    //moving the current record data to the form controls
                    //NEVER code to the data supplied
                    //the Products table on the Northwind database does not
                    //  have a record where the nullable fields are actual null
                    //the following code takes into account fields which actually
                    //  maybe null
                    albumid = queryAlbums.AlbumId.ToString();
                    albumtitle = queryAlbums.Title.ToString();
                    artistid = queryAlbums.ArtistId == null ? "" : queryAlbums.ArtistId.ToString();
                    releaseyear = queryAlbums.ReleaseYear.ToString();
                    releaselabel = queryAlbums.ReleaseLabel == null ? "" : queryAlbums.ReleaseLabel.ToString();

                }
                <form class="form-horizontal" id="theForm" action="" method="post">
                    <div class="form-group">
                        <label class="col-xs-2" id="forAlbumID">Album ID</label>
                        <div class="col-xs-10">
                            <input class="form-control" type="text" name="AlbumID" value="@albumid" readonly />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-xs-2" id="forAlbumTitle">Album Title</label>
                        <div class="col-xs-10">
                            <input class="form-control" id="AlbumTitle" type="text" name="AlbumTitle" value="@albumtitle" />
                            <span class="text-danger">@Html.ValidationMessage("AlbumTitle")</span>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-xs-2" id="forArtistID">Artist</label>
                        <div class="col-xs-10">
                            <select class="form-control" id="AlbumArtist" name="AlbumArtist" value="@artistid">
                                <option value="">Select Artist...</option>
                                @foreach (var acollectionrow in artistlist)
                                {
                                    if (acollectionrow.ArtistId.ToString() == artistid)
                                    {
                                        <option value="@acollectionrow[0]" selected>@acollectionrow[1]</option>
                                    }
                                    else
                                    {
                                        <option value="@acollectionrow[0]">@acollectionrow[1]</option>
                                    }
                                }
                            </select>
                            <span class="text-danger">@Html.ValidationMessage("AlbumArtist")</span>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-xs-2" id="forReleaseYear">Release Year</label>
                        <div class="col-xs-10">
                            <input class="form-control" type="number" id="ReleaseYear" name="ReleaseYear" value="@releaseyear" />
                            <span class="text-danger">@Html.ValidationMessage("ReleaseYear")</span>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-xs-2" id="forReleaseLabel">Release Label</label>
                        <div class="col-xs-10">
                            <input class="form-control" id="ReleaseLabel" type="text" name="ReleaseLabel" value="@releaselabel" />
                            <span class="text-danger">@Html.ValidationMessage("ReleaseLabel")</span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-11 text-center">
                            <button type="submit" name="theButton" id="theUpdate" class="btn btn-primary" value="update">Update</button>&nbsp;&nbsp;&nbsp;
                            <button type="submit" name="theButton" id="theDelete" class="btn btn-primary" value="delete" formnovalidate>Delete</button>&nbsp;&nbsp;&nbsp;
                            <button type="submit" name="theButton" id="theReset" class="btn btn-primary" value="reset" formnovalidate>Reset</button>&nbsp;&nbsp;&nbsp;
                            <button type="submit" name="theButton" id="theCancel" class="btn btn-primary" value="cancel" formnovalidate>Cancel</button>
                        </div>
                    </div>
                    @* this javascript will allow for a confirmation dialog to appear
                when a particular button is pressed (theDelete) *@
                    <script type="text/javascript">
                document.getElementById("theDelete").onclick = ConfirmDelete;
                function ConfirmDelete() {
                    return confirm("Are you sure you want to remove @albumtitle");
                }
                    </script>
                </form>
            </div>
                </div>
            </div>
