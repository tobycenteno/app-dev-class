@{
    Page.Title = "M/R WebGrid";
    Layout = "~/_LayoutMenu.cshtml";

    //in this demonstration, a datavalue is expected
    //from someother webpage
    //to access the datavalue from the sending page
    //use Request.QueryString["labelid"]
    //if a value does exist on the url by the specified labelid
    //   that data will be retreived as a string
    //if the labelid does not exist on the url, you get a null
    var categoryid = Request.QueryString["cid"];

    //if not value exists, then I will send the user to 
    //the proper search page
    if (string.IsNullOrEmpty(categoryid))
    {
        Response.Redirect("MultiRecordQuery.cshtml");
    }

    var db = Database.Open("NWDB");
    var scalarcommand = "SELECT CategoryName "
                        + "FROM Categories "
                        + "WHERE CategoryID = @0";
    var categoryname = db.QueryValue(scalarcommand, categoryid);

    var querycommand = "SELECT ProductID, ProductName, QuantityPerUnit, UnitPrice, "
                   + "GetDate() aDateField, "
                   + "UnitsInStock, UnitsOnOrder, ReorderLevel, Discontinued "
                   + "FROM Products "
                   + "WHERE CategoryID = @0 "
                   + "ORDER BY 2";
    var results = db.Query(querycommand, categoryid);

    //create an instance of WebGrid
    //notice the collection is passed at the time of instantiation
    var gridinstance = new WebGrid(results, rowsPerPage: 5);
}
@section banner{
    <span style="font-size:xx-large"><strong>Multi-Record WebGrid</strong></span>
}



<div>
    <div class="row">
        @*<div class="col-sm-offset-1">*@
        <span style="font-size:x-large">
            <strong>
                Products for @categoryname
            </strong>
        </span>
        <!--Display the WebGrid instance in its default display-->
        @gridinstance.GetHtml(
          tableStyle:"table table-bordered table-striped table-hover",
          mode:WebGridPagerModes.All,
          firstText: "Start",
          lastText: "End",
          columns: gridinstance.Columns(
          gridinstance.Column(columnName: "ProductID", header: "ID", canSort:true),
          gridinstance.Column(columnName: "ProductName", header: "Name", canSort:true),
          gridinstance.Column(columnName: "UnitPrice", header: "$", canSort:true,
                        format: (item) => item.UnitPrice.ToString("0.00")),
          gridinstance.Column(columnName: "aDateField", header: "Date", canSort:false,
                        format: (item) => item.aDateField.ToString("MMM dd, yyyy")),
          gridinstance.Column(columnName: "Discontinued", header: "Disc", canSort:false,
                format: @<input name="Discontinued" type="checkbox"
                                value="@item.Discontinued" disabled="disabled"
                                @(item.Discontinued == true ? "Checked" : null) />),
               gridinstance.Column(header: "",
                     format: @<text><a href="~/DBPages/WebGridDestination.cshtml?pid=@item.ProductID"
                                       onclick="return confirm('Are you sure you wish to view the product details of @item.ProductName ?')">View</a></text>)
               ))
        @*</div>*@
    </div>
</div>